(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{761:function(t,a,s){"use strict";s.r(a);var e=s(13),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-请说一下响应式数据的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-请说一下响应式数据的理解"}},[t._v("#")]),t._v(" 1. 请说一下响应式数据的理解？")]),t._v(" "),s("p",[t._v("♥ 核心：数组和对象类型当值变化时如何劫持到。对象内部通过 defineReactive 方法，使用 Object.defineProperty 将属性进行劫持（只会劫持已经存在的属性），数组则是通过重写数组方法来实现。 这里在回答时可以带出一些相关知识点（比如多层对象是通过递归来实现劫持，顺带提出 Vue3 中是使用 proxy 来实现响应式数据）")]),t._v(" "),s("p",[t._v("♥ 补充：内部依赖收集是怎样做到的，每个属性都拥有自己的 dep 属性，存放他所依赖的 watcher，当属性变化后会通知自己对应的 watcher 去更新 （其实后面会讲到每个对象类型自己本身也拥有一个 dep 属性，这个在$set 面试题中在进行讲解）")]),t._v(" "),s("p",[t._v("♥ 这里可以引出性能优化相关的内容")]),t._v(" "),s("ol",[s("li",[t._v("对象层级过深，性能就会差")]),t._v(" "),s("li",[t._v("不需要响应数据的内容不要放到 data 中")]),t._v(" "),s("li",[t._v("Object.freeze() 可以冻结数据")])]),t._v(" "),s("h2",{attrs:{id:"_2-vue-中如何检测数组的变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue-中如何检测数组的变化"}},[t._v("#")]),t._v(" 2. Vue 中如何检测数组的变化？")]),t._v(" "),s("p",[t._v("♥ 核心：数组考虑性能原因没有用 defineProperty 对数组的每一项进行拦截，而是选择重写数组（push,shift,pop,splice,unshift,sort,reverse）方法进行重写。")]),t._v(" "),s("p",[t._v("♥ 补充：在 Vue 中修改数组的索引和长度是无法监控到的。需要通过以上 7 种变异方法修改数组才会触发数组对应的 watcher 进行更新。数组中如果是对象数据类型也会进行递归劫持。")]),t._v(" "),s("p",[t._v("♥ 补充：如果想更改索引更新数据怎么办？可以通过"),s("code",[t._v("Vue.$set()")]),t._v("来进行处理 ===> "),s("code",[t._v("核心内部用的是 splice 方法")])]),t._v(" "),s("h2",{attrs:{id:"_3-vue-中模板编译原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-vue-中模板编译原理"}},[t._v("#")]),t._v(" 3. Vue 中模板编译原理？")]),t._v(" "),s("p",[t._v("♥ 核心点考察的是：如何将 template 转换成 render 函数(这里要注意的是我们在开发时尽量不要使用 template，因为将 template 转化成 render 方法需要在运行时进行编译操作会有性能损耗，同时引用带有 compiler 包的 vue 体积也会变大。默认.vue 文件中的 template 处理是通过 vue-loader 来进行处理的并不是通过运行时的编译 - 后面我们会说到默认 vue 项目中引入的 vue.js 是不带有 compiler 模块的)。")]),t._v(" "),s("ol",[s("li",[t._v("将 template 模板转换成 ast 语法树 - parserHTML")]),t._v(" "),s("li",[t._v("对静态语法做静态标记 - markUp")]),t._v(" "),s("li",[t._v("重新生成代码 - codeGen")])]),t._v(" "),s("p",[t._v("♥ 补充：模板引擎的实现原理就是 "),s("code",[t._v("new Function")]),t._v(" + "),s("code",[t._v("with")]),t._v(" 来进行实现的")]),t._v(" "),s("p",[t._v("♥ vue-loader 中处理 template 属性主要靠的是 vue-template-compiler 模块")]),t._v(" "),s("h2",{attrs:{id:"_4-生命周期钩子是如何实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-生命周期钩子是如何实现的"}},[t._v("#")]),t._v(" 4. 生命周期钩子是如何实现的？")]),t._v(" "),s("p",[t._v("♥ 核心点考察的是： Vue 的生命周期钩子就是回调函数而已，当创建组件实例的过程中会调用对应的钩子方法")]),t._v(" "),s("p",[t._v("♥ 核心点答出来了也可以在进行补充回答：内部主要是使用 callHook 方法来调用对应的方法。核心是一个发布订阅模式，将钩子订阅好（内部采用数组的方式存储），在对应的阶段进行发布！")]),t._v(" "),s("h2",{attrs:{id:"_5-vue-mixin-的使用场景和原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-vue-mixin-的使用场景和原理"}},[t._v("#")]),t._v(" 5. Vue.mixin 的使用场景和原理？")]),t._v(" "),s("p",[t._v("♥ 核心：Vue.mixin 的作用就是抽离公共的业务逻辑，原理类似“对象的继承”，当组件初始化时会调用 mergeOptions 方法进行合并，采用策略模式针对不同的属性进行合并。如果混入的数据和本身组件中的数据冲突，会采用“就近原则”以组件的数据为准。")]),t._v(" "),s("p",[t._v('♥ 补充：mixin 中有很多缺陷 "命名冲突问题"、"依赖问题"、"数据来源问题",这里强调一下 mixin 的数据是不会被共享的！')]),t._v(" "),s("h2",{attrs:{id:"_6-nexttick-在哪里适用-原理是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-nexttick-在哪里适用-原理是"}},[t._v("#")]),t._v(" 6. nextTick 在哪里适用，原理是？")]),t._v(" "),s("p",[t._v("♥ 核心：nextTick 中的回调是在下次 DOM 更新循环结束之后执行的延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。原理就是异步方法(promise,mutationObserver,setImmediate,setTimeout)经常与事件环一起来问(宏任务和微任务)")]),t._v(" "),s("p",[t._v("♥ 补充：vue 多次更新数据，最终会进行批处理更新。内部调用的就是 nextTick 实现了延迟更新，用户自定义的 nextTick 中的回调会被延迟到更新完成后调用，从而可以获取更新后的 DOM。")]),t._v(" "),s("ul",[s("li",[t._v("this.nextTick 的返回值是Promise")])]),t._v(" "),s("h2",{attrs:{id:"_7-vue-为什么需要虚拟-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-vue-为什么需要虚拟-dom"}},[t._v("#")]),t._v(" 7. Vue 为什么需要虚拟 DOM？")]),t._v(" "),s("p",[t._v("♥ 核心：Virtual DOM 就是用 js 对象来描述真实 DOM，是对真实 DOM 的抽象，由于直接操作 DOM 性能低但是 js 层的操作效率高，可以将 DOM 操作转化成对象操作，最终通过 diff 算法比对差异进行更新 DOM（减少了对真实 DOM 的操作）。虚拟 DOM 不依赖真实平台环境从而也可以实现跨平台。")]),t._v(" "),s("p",[t._v("♥ 补充：虚拟 DOM 的实现就是普通对象包含 tag、attrs、children 等属性对真实节点的描述。（本质上就是在 JS 和 DOM 之间的一个缓存）")]),t._v(" "),s("h2",{attrs:{id:"_8-vue-中-diff-的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-vue-中-diff-的原理"}},[t._v("#")]),t._v(" 8. Vue 中 diff 的原理？")]),t._v(" "),s("p",[t._v("♥ 核心点考察的是：Vue 的 diff 算法是平级比较，不考虑跨级比较的情况。内部采用深度递归的方式 + 双指针的方式进行比较。")]),t._v(" "),s("p",[t._v("♥ 比较过程:")]),t._v(" "),s("ol",[s("li",[t._v("先比较是否是相同节点")]),t._v(" "),s("li",[t._v("相同节点比较属性,并复用老节点")]),t._v(" "),s("li",[t._v("比较儿子节点，考虑老节点和新节点儿子的情况")]),t._v(" "),s("li",[t._v("优化比较：头头、尾尾、头尾、尾头 5.比对查找进行复用")])]),t._v(" "),s("p",[t._v("♥ Vue3 中采用最长递增子序列实现 diff 算法")]),t._v(" "),s("h2",{attrs:{id:"_9-既然-vue-通过数据劫持可以精准探测数据变化-为什么还需要虚拟-dom-进行-diff-检测差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-既然-vue-通过数据劫持可以精准探测数据变化-为什么还需要虚拟-dom-进行-diff-检测差异"}},[t._v("#")]),t._v(" 9. 既然 Vue 通过数据劫持可以精准探测数据变化,为什么还需要虚拟 DOM 进行 diff 检测差异?")]),t._v(" "),s("p",[t._v("♥ 核心：响应式数据变化，Vue 确实可以在数据发生变化时,响应式系统可以立刻得知。但是如果给每个属性都添加 watcher 用于更新的话，会产生大量的 watcher 从而降低性能。而且粒度过细也会导致更新不精准的问题，所以 vue 采用了组件级的 watcher 配合 diff 来检测差异。")]),t._v(" "),s("p",[t._v("♥ 补充：diff 算法")]),t._v(" "),s("h2",{attrs:{id:"_10-vue-中-computed-和-watch-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-vue-中-computed-和-watch-的区别"}},[t._v("#")]),t._v(" 10. Vue 中 computed 和 watch 的区别？")]),t._v(" "),s("p",[t._v("♥ 核心：computed 和 watch 都是基于 Watcher 来实现的，分别是计算属性 watcher 和用户 watcher。computed 属性是具备缓存的，依赖的值不发生变化，对其取值时计算属性方法不会重新执行（可以用模板渲染，取值的过程中不支持异步方法）watch 则是监控值的变化，当值发生变化时调用对应的回调函数")]),t._v(" "),s("p",[t._v("♥ 补充：computed 不会立即执行，内部通过 defineProperty 进行定义。并且通过 dirty 属性来检测依赖的数据是否发生变化。watch 则是立即执行将老值保存在 watcher 上，当数据更新时重新计算新值，将新值和老值传递到回调函数中。")]),t._v(" "),s("h2",{attrs:{id:"_11-vue-set-方法是如何实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-vue-set-方法是如何实现的"}},[t._v("#")]),t._v(" 11. Vue.set 方法是如何实现的？")]),t._v(" "),s("p",[t._v("♥ 核心：为什么$set 可以触发更新,我们给对象和数组本身都增加了 dep 属性。当给对象新增不存在的属性则触发对象依赖的 watcher 去更新，当修改数组索引时我们调用数组本身的 splice 方法去更新数组")]),t._v(" "),s("ul",[s("li",[t._v("源码的方法：如果是对象调用 "),s("code",[t._v("defineReactive")]),t._v(", 如果是 "),s("code",[t._v("数组")]),t._v(" 调用数组的 "),s("code",[t._v("splice")]),t._v(" 方法")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.是开发环境 target 没定义或者是基础类型则报错")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'production'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isUndef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPrimitive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Cannot set reactive property on undefined, null, or primitive value: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.如果是数组 Vue.set(array,1,100); 调用我们重写的splice方法 (这样可以更新视图)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isValidArrayIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.如果是对象本身的属性，则直接添加即可")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ob "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__ob__\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.如果是Vue实例 或 根数据data时 报错")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_isVue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ob "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vmCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'production'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Avoid adding reactive properties to a Vue instance or its root $data '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'at runtime - declare it upfront in the data option.'")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5.如果不是响应式的也不需要将其定义成响应式属性")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("ob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6.将属性定义成响应式的")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineReactive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7.通知视图更新")]),t._v("\n  ob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("notify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_12-vue-的生命周期方法都有哪些-一般在哪一步发起-ajax-请求及原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-vue-的生命周期方法都有哪些-一般在哪一步发起-ajax-请求及原因"}},[t._v("#")]),t._v(" 12. Vue 的生命周期方法都有哪些？一般在哪一步发起 AJAx 请求及原因？")]),t._v(" "),s("p",[t._v("♥ 核心：vue 组件生命周期中能做什么事情")]),t._v(" "),s("ul",[s("li",[t._v("beforeCreate 在实例初始化之后，数据观测(data observer) 和 event/watcher 事件配置之前被调用。")]),t._v(" "),s("li",[t._v("created 实例已经创建完成之后被调用。在这一步，实例已完成以下的配置：数据观测(data observer)，属性和方法的运算， watch/event 事件回调。这里没有$el")]),t._v(" "),s("li",[t._v("beforeMount 在挂载开始之前被调用：相关的 render 函数首次被调用。")]),t._v(" "),s("li",[t._v("mounted el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子。")]),t._v(" "),s("li",[t._v("beforeUpdate 数据更新时调用，发生在虚拟 DOM 重新渲染和打补丁之前。")]),t._v(" "),s("li",[t._v("updated 由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。")]),t._v(" "),s("li",[t._v("beforeDestroy 实例销毁之前调用。在这一步，实例仍然完全可用。")]),t._v(" "),s("li",[t._v("destroyed Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。 该钩子在服务器端渲染期间不被调用。")])]),t._v(" "),s("p",[t._v("♥ 钩子函数的作用")]),t._v(" "),s("ul",[s("li",[t._v("created 实例已经创建完成，因为它是最早触发的原因可以进行一些数据，资源的请求。(服务端渲染支持 created 方法)")]),t._v(" "),s("li",[t._v("mounted 实例已经挂载完成，可以进行一些 DOM 操作")]),t._v(" "),s("li",[t._v("beforeUpdate 可以在这个钩子中进一步地更改状态，这不会触发附加的重渲染过程。")]),t._v(" "),s("li",[t._v("updated 可以执行依赖于 DOM 的操作。然而在大多数情况下，你应该避免在此期间更改状态，因为这可能会导致更新无限循环。 该钩子在服务器端渲染期间不被调用。")]),t._v(" "),s("li",[t._v("destroyed 可以执行一些优化操作,清空定时器，解除绑定事件")])]),t._v(" "),s("p",[t._v("♥ 在哪发送请求都可以，主要看具体你要做什么事")]),t._v(" "),s("h2",{attrs:{id:"_13-移除事件监听使用-beforedestroy-还是-destroyed-钩子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-移除事件监听使用-beforedestroy-还是-destroyed-钩子"}},[t._v("#")]),t._v(" 13. 移除事件监听使用 beforeDestroy 还是 destroyed 钩子？")]),t._v(" "),s("h2",{attrs:{id:"_14-vue-组件间传值的方式及之间区别-百度链接-https-pan-baidu-com-s-17phji7cqkkowig6j4krega-提取码-fdlf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-vue-组件间传值的方式及之间区别-百度链接-https-pan-baidu-com-s-17phji7cqkkowig6j4krega-提取码-fdlf"}},[t._v("#")]),t._v(" 14. Vue 组件间传值的方式及之间区别？百度链接：https://pan.baidu.com/s/17PHJI7cQKkowIg6J4kReGA 提取码：fdlf")]),t._v(" "),s("p",[t._v("♥ 核心点考察的是：vue 组件的通信方式")]),t._v(" "),s("ul",[s("li",[t._v("props 和 $emit 父组件向子组件传递数据是通过prop传递的，子组件传递数据给父组件是通过$emit 触发事件来做到的")]),t._v(" "),s("li",[t._v("$parent,$children 获取当前组件的父组件和当前组件的子组件")]),t._v(" "),s("li",[t._v("$attrs和$listeners A->B->C。Vue 2.4 开始提供了$attrs和$listeners 来解决这个问题")]),t._v(" "),s("li",[t._v("父组件中通过 provide 来提供变量，然后在子组件中通过 inject 来注入变量。")]),t._v(" "),s("li",[t._v("$refs 获取实例")]),t._v(" "),s("li",[t._v("envetBus 平级组件数据传递 这种情况下可以使用中央事件总线的方式")]),t._v(" "),s("li",[t._v("vuex 状态管理")])]),t._v(" "),s("h2",{attrs:{id:"_15-attrs-是为了解决什么问题出现的-应用场景有哪些-provide-inject-不能解决它能解决的问题吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-attrs-是为了解决什么问题出现的-应用场景有哪些-provide-inject-不能解决它能解决的问题吗"}},[t._v("#")]),t._v(" 15. $attrs 是为了解决什么问题出现的？应用场景有哪些？provide/inject 不能解决它能解决的问题吗？")]),t._v(" "),s("p",[t._v("♥ 核心：")]),t._v(" "),s("ul",[s("li",[t._v("$attrs 主要的作用就是实现批量传递数据。")]),t._v(" "),s("li",[t._v("provide/inject 更适合应用在插件中，主要是实现跨级数据传递")])]),t._v(" "),s("h2",{attrs:{id:"_16-vue-的组件渲染原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-vue-的组件渲染原理"}},[t._v("#")]),t._v(" 16. Vue 的组件渲染原理？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\nVue 组件的渲染原理：\n\n1. 通过调用 Vue.component 来创建组件，给 conponent 方法传递函数或者对象；如果是对象，内部会借助 Vue.extend 把组件对象转换构造函数，将装换后构造函数定义到 Vue 的 components 对象。\n2. 调用 Vue.extend 核心：创建一个类构造函数，让这个构造函数继承父类，并将当前类的构造函数返回\n3. 当子类被 new 执行的时候，内部会通过原型链找到父类的\\_init()方法，进行子类实例的初始化操作\n4. 组件的初始化的时候，new 组件的构造函数，并让其调用\\$mount 方法来进行手动挂载\n5. 组件可能分为全局组件和局部组件，内存采用策略模式，合并父子组件的 component 竖向，让子组件的原型链指向父组件，这样后期可以通过原型链来查找对应的组件\n6. 创建虚拟节点，核心判断是通过 tag 筛选出组件，将其组件生成的虚拟节点\n7. 将创建好的虚拟节点转换成真实 dom 渲染\n\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("（参考答案）\n♥核心点考察的是：\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 父子组件渲染的先后顺序\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 组件是如何渲染到页面上的\n\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("app"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("app"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("这个是$vnode 占位符节点"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n\n①在渲染父组件时会创建父组件的虚拟节点"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("其中可能包含子组件的标签\n②在创建虚拟节点时"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("获取组件的定义使用Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extend生成组件的构造函数。\n③将虚拟节点转化成真实节点时，会创建组件的实例并且调用组件的$mount方法。\n④所以组件的创建过程是先父后子\n")])])]),s("h2",{attrs:{id:"_17-vue-中组件的-data-为什么是一个函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-vue-中组件的-data-为什么是一个函数"}},[t._v("#")]),t._v(" 17. Vue 中组件的 data 为什么是一个函数？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("组件中如果data是一个对象，由于对象本身是引用类型，创建多个组件，当修改data中的数据的时候，会影响所有组件创建的实例，Vue中data是作为一个函数组，主要是创建实例的时候，保证创建的所有的实例的响应式数据具备私有的特性。\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("（参考答案）\n♥核心点考察的是：每次使用组件时都会对组件进行实例化操作，并且调用data函数返回一个对象作为组件的数据源。这样可以保证多个组件间数据互不影响\n\n♥ 例如\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("data")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" d1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" d2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nd1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),s("h2",{attrs:{id:"_18-请说下-v-if-和-v-show-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-请说下-v-if-和-v-show-的区别"}},[t._v("#")]),t._v(" 18. 请说下 v-if 和 v-show 的区别？")]),t._v(" "),s("h3",{attrs:{id:"核心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心"}},[t._v("#")]),t._v(" 核心：")]),t._v(" "),s("ul",[s("li",[t._v("v-if 在编译过程中会被转化成三元表达式,条件不满足时不渲染此节点。")]),t._v(" "),s("li",[t._v("v-show 会被编译成指令，条件不满足时控制样式将对应节点隐藏 （内部其他指令依旧会继续执行）")])]),t._v(" "),s("h3",{attrs:{id:"补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[t._v("#")]),t._v(" 补充：")]),t._v(" "),s("ul",[s("li",[t._v("频繁控制显示隐藏尽量不使用 v-if，v-if 和 v-for 尽量不要连用")])]),t._v(" "),s("h3",{attrs:{id:"v-if-源码剖析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-if-源码剖析"}},[t._v("#")]),t._v(" v-if 源码剖析")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("genIfConditions")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("conditions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ASTIfConditions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CodegenState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  altGen"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Function"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  altEmpty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("conditions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" altEmpty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_e()'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" condition "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conditions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shift")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果有表达式")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exp"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(")?")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将表达式作为条件拼接成元素")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("genTernaryExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("genIfConditions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conditions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" altGen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" altEmpty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("genTernaryExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有表达式直接生成元素 像 v-else")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-if with v-once should generate code like (a)?_m(0):_m(1)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("genTernaryExp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" altGen\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("altGen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("once\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("genOnce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("genElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"v-show-源码剖析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-show-源码剖析"}},[t._v("#")]),t._v(" v-show 源码剖析")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("el")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VNodeDirective"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("vnode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VNodeWithData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" originalDisplay "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__vOriginalDisplay "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n        el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("display "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'none'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("display "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取原始显示值")]),t._v("\n        el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("display "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" originalDisplay "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'none'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据属性控制显示或者隐藏")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_19-vue-use-是干什么的-原理是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-vue-use-是干什么的-原理是什么"}},[t._v("#")]),t._v(" 19. Vue.use 是干什么的？原理是什么？")]),t._v(" "),s("p",[t._v("♥ 核心：")]),t._v(" "),s("p",[t._v("Vue.use 是用来使用插件的，我们可以在插件中扩展全局组件、指令、原型方法等。")]),t._v(" "),s("p",[t._v("♥ 原理剖析")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugin")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Function "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件不能重复的加载")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" installedPlugins "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_installedPlugins "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_installedPlugins "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("installedPlugins"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("plugin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// additional parameters")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unshift")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// install方法的第一个参数是Vue的构造函数，其他参数是Vue.use中除了第一个参数的其他参数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" plugin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("install "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用插件的install方法")]),t._v("\n        plugin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("plugin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" plugin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件本身是一个函数，直接让函数执行")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("plugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    installedPlugins"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("plugin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缓存插件")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_20-vue-router-有几种钩子函数-具体是什么及执行流程是怎样的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-vue-router-有几种钩子函数-具体是什么及执行流程是怎样的"}},[t._v("#")]),t._v(" 20. vue-router 有几种钩子函数？具体是什么及执行流程是怎样的？")]),t._v(" "),s("ol",[s("li",[t._v("vue-router 的钩子函数：beforeEach，beforeResolve，afterEach 三个钩子函数；\nbeforeEach 传入一个函数，接受三个参数 to(代表要进入的目标)，from(当前正要要离开的路由)，next(执行 next 方法调用的参数)；\nbeforeResolve 和 beforeEach 类似，传入函数接受三个参数，是 vue-router2.5.0 之后提供的钩子函数，用于注册一个全局守卫；beforeEach 和 beforeEach 正好相反，路由跳转在之后触发，传入的函数，参数只有两个 to、from，没有 next，发生 beforeEach 和 beforeResolve 之后。")]),t._v(" "),s("li",[t._v("beforeEnter 路由的独享钩子")]),t._v(" "),s("li",[t._v("组件内的钩子函数：beforeRouterEnter、beforeRouteUpdate、beforeRouteLeave")])]),t._v(" "),s("p",[t._v("♥ 核心：")]),t._v(" "),s("p",[t._v("路由钩子的执行流程, 钩子函数种类有:全局守卫、路由守卫、组件守卫")]),t._v(" "),s("p",[t._v("♥ "),s("strong",[t._v("完整的导航解析流程")])]),t._v(" "),s("p",[t._v("① 导航被触发。"),s("br"),t._v("\n② 在失活的组件里调用 beforeRouteLeave 守卫。"),s("br"),t._v("\n③ 调用全局的 beforeEach 守卫。"),s("br"),t._v("\n④ 在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。"),s("br"),t._v("\n⑤ 在路由配置里调用 beforeEnter。"),s("br"),t._v("\n⑥ 解析异步路由组件。"),s("br"),t._v("\n⑦ 在被激活的组件里调用 beforeRouteEnter。"),s("br"),t._v("\n⑧ 调用全局的 beforeResolve 守卫 (2.5+)。"),s("br"),t._v("\n⑨ 导航被确认。"),s("br"),t._v("\n⑩ 调用全局的 afterEach 钩子。"),s("br"),t._v("\n⑪ 触发 DOM 更新。"),s("br"),t._v("\n⑫ 调用 beforeRouteEnter 守卫中传给 next 的回调函数，创建好的组件实例会作为回调函数的参数传入。"),s("br")]),t._v(" "),s("h2",{attrs:{id:"_21-vue-router-的两种模式的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-vue-router-的两种模式的区别"}},[t._v("#")]),t._v(" 21. vue-router 的两种模式的区别？")]),t._v(" "),s("p",[t._v("♥ 核心："),s("code",[t._v("hash")]),t._v(" 模式、"),s("code",[t._v("history")]),t._v(" 模式")]),t._v(" "),s("ul",[s("li",[t._v("hash 模式：hash + hashChange 兼容性好但是不美观")]),t._v(" "),s("li",[t._v("history 模式: historyApi+ popState 虽然美观，但是刷新会出现 404 需要后端进行配置")])]),t._v(" "),s("h2",{attrs:{id:"_22-函数式组件的优势及原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-函数式组件的优势及原理"}},[t._v("#")]),t._v(" 22. 函数式组件的优势及原理？")]),t._v(" "),s("p",[t._v("函数式组件没有响应式数据、钩子函数的处理，因此渲染性能相对会高一些，减少渲染带来的开销。")]),t._v(" "),s("h2",{attrs:{id:"_23-v-if-与-v-for-的优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-v-if-与-v-for-的优先级"}},[t._v("#")]),t._v(" 23. v-if 与 v-for 的优先级？")]),t._v(" "),s("p",[t._v("v-for 的优先级高于 v-if，内部渲染的时候，会先循环，在根绝条件进行判断。一般情况不会把 v-if 和 v-for 连用，除了会发出警告外，还会有性能上的消耗。")]),t._v(" "),s("h2",{attrs:{id:"_24-组件中写-name-选项有哪些好处及作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-组件中写-name-选项有哪些好处及作用"}},[t._v("#")]),t._v(" 24. 组件中写 name 选项有哪些好处及作用？")]),t._v(" "),s("ol",[s("li",[t._v("给组件表示名字，同时会在实例的 vm.$opitons.name 获取名字，从而知道是哪个组件")]),t._v(" "),s("li",[t._v("组件开发的时候，可以使用全局组件注册，通过 name 找到对应组件。")]),t._v(" "),s("li",[t._v("可以实现组件模板递归调用自身。")])]),t._v(" "),s("h2",{attrs:{id:"_25-vue-事件修饰符有哪些-其实现原理是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-vue-事件修饰符有哪些-其实现原理是什么"}},[t._v("#")]),t._v(" 25. Vue 事件修饰符有哪些？其实现原理是什么？")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".top")]),t._v(" 主要功能阻止事件冒泡，让属性的事件向外去执行函数。")]),t._v(" "),s("li",[s("code",[t._v(".prevent")]),t._v(" 阻止当前元素的默认行为")]),t._v(" "),s("li",[s("code",[t._v(".capture")]),t._v(" 按照捕获来执行从外向内执行函数")]),t._v(" "),s("li",[s("code",[t._v(".self")]),t._v(" 当前元素自身触发处理函数时才会触发函数，核心原理：是根据 event.target 判断自身")]),t._v(" "),s("li",[s("code",[t._v(".once")]),t._v(" 事件触发一次")]),t._v(" "),s("li",[s("code",[t._v(".passtive")]),t._v(" 主要用于监听滚动事件行为")])]),t._v(" "),s("h2",{attrs:{id:"_26-vue-directive-源码实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-vue-directive-源码实现"}},[t._v("#")]),t._v(" 26. Vue.directive 源码实现？")]),t._v(" "),s("ol",[s("li",[t._v("在初始化全局 api(initGlobalApi)的时候，会给 Vue 这个类添加静态方法之一 "),s("code",[t._v("directive")]),t._v("，"),s("code",[t._v("Vue.directive")]),t._v(" 是一个函数，此函数接受两个参数，分别是 "),s("code",[t._v("id")]),t._v(" 和 "),s("code",[t._v("definition")]),t._v(" 两个参数，"),s("code",[t._v("id")]),t._v(" 为自定义指令的名，definition"),s("code",[t._v("可以是对象或者回调函数，如果")]),t._v("definition"),s("code",[t._v("是函数的时候，源码内部将")]),t._v("definition"),s("code",[t._v("变换成")]),t._v("object` 类型，里面包含两个属性 bind 和 update，并将方法传递给 bind 和 update 属性，同时将 definition 添加 Vue 类的 options 的 directives 属性上。")]),t._v(" "),s("li",[t._v("当 new Vue 创建实例的时候，会将 Vue.options 中的属性合并到 vm.$options 中，包含 directives 全局和局部指令，通过合并让子组件的对象指令的原型链指向全局的指令对象。")]),t._v(" "),s("li",[t._v("调用指令_update 的时候，会通过调用 normalizeDirectives 来格式化指令，同时调用一次 callhook 将格式化的指令，传入 bind 钩子函数进行初始化的操作")]),t._v(" "),s("li",[t._v("节点渲染的时候中有很多钩子被调用，用来处理节点对应标签的各种数据，指令的钩子都会调用_update 函数，先调用 normalizeDirectives$1函数，根据oldVnode查找对应的指令，如果就老的指令没有，就直接返回空对象{},再调用normalizeDirectives$2 函数，根据 vnode 查找对应的指令。")]),t._v(" "),s("li",[t._v("遍历新的指令，判断老的指令存在就调用就调回 update 的钩子函数，如果老的指令不存在，会将新的指令的钩子存储到 dirsWithInsert 数组中暂存。")]),t._v(" "),s("li",[t._v("暂存在 dirsWithInsert 的指令钩子函数，会在节点生成 Dom 元素插入到父元素中后调用 dirsWithInsert 的钩子函数")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("directive")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" definition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" definition "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    definition "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("definition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" definition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("directives"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" definition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" definition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_27-如何理解自定义指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-如何理解自定义指令"}},[t._v("#")]),t._v(" 27. 如何理解自定义指令?")]),t._v(" "),s("p",[t._v("自定义指令主要还是通过指令来操作的真实真实的 DOM 元素，Vue 提供两个两种方式来定义指令，"),s("code",[t._v("全局")]),t._v("和"),s("code",[t._v("局部")]),t._v("指令两种方式，指令中有自己对应的钩子函数，分别为：bind/inserted/update/componentUpdated/unbind,通常用到最多的两个钩子 bind 和 update，每个钩子都有 el,binding,vnode 参数可用，oldVnode 仅限于 update 和 componentUpdated 钩子中可用，通过修改 el 中属性变化，达到指令的效果，我们基于指令可以创建和修改方法，实现复杂的指令。")]),t._v(" "),s("h2",{attrs:{id:"_28-keep-alive-平时在哪里适用-原理是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-keep-alive-平时在哪里适用-原理是"}},[t._v("#")]),t._v(" 28. keep-alive 平时在哪里适用？原理是？")]),t._v(" "),s("ul",[s("li",[t._v("keep-alive 是 vue 内置的组件，主要组件主要是能够缓存不活动组件，在组件进行切换的时候，一般默认会进行销毁，如果在组件切换的时候，使用 keep-alive 包裹的组件，在切换的时候，会保留组件的状态。")])]),t._v(" "),s("h3",{attrs:{id:"原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理：")]),t._v(" "),s("p",[t._v("keep-alive 是 vue 内置的 js 组件，props 包含两个参数 include 和 exclude，用于匹配需要缓存的组件，这里传入的是组件的 name 属性；created 钩子函数中给定义了两个属性 catch 和 keys，catch 用于缓存 VNode，keys 记录缓存组件 cid 键值对；detroyed 钩子函数销毁所有 catch 中组件实例；mouted 钩子函数用于将需要缓存的组件存储到 catch；调用 render 方法：")]),t._v(" "),s("ol",[s("li",[t._v("取货 keep-alive 包含的第一个子组件对象和组件名，")]),t._v(" "),s("li",[t._v("根据设定 include 和 exclude 条件进行匹配，来判断是否缓存，")]),t._v(" "),s("li",[t._v("根据组件 Id 和 tag 生成 key，并在缓存对象中查找已缓存的该组件，如果存在会存储在 created 中定义的 keys 中，")]),t._v(" "),s("li",[t._v("最后将 vnode.data.keepAlive 设置为 true，并返回 vnode")])]),t._v(" "),s("h2",{attrs:{id:"_29-v-if、v-model、v-for-的实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-v-if、v-model、v-for-的实现原理"}},[t._v("#")]),t._v(" 29. v-if、v-model、v-for 的实现原理")]),t._v(" "),s("ol",[s("li",[t._v('v-if 原理：将模板转换为 ast 结构的 js 对象，根绝 div 中属性给 ast 结构上添加了不同的标记，如 v-if 添加了 ast -> children 中标记 if：show，ifConditions: [{…}]，ifProcessed: true 三个属性，然后会根据这三个属性生成 render 函数如：render: "with(this){return _c(\'div\',{attrs:{"id":"app"}},[(show)?_c(\'div\',[_v("hello")]):_e()])}"，show 的值决定是否生成该节点，当 render 函数被调用后，会生成 vnode 节点，v-if 的子节点就在 children 中，也是 vnode 节点，接下来就是调用 vm._update 函数内部在去渲染页面。')])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ast")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("attrs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("…"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("attrsList")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("…"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("attrsMap")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("…"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("62")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parent")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plain")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rawAttrsMap")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("…"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("staticRoot")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    chilren里面标记了\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[t._v("v-model 核心原理，通过 vulue 属性和事件 input 实现。")])]),t._v(" "),s("li",[s("p",[t._v("v-for 原理：和 v-if 原理一样，都会被编译成 js 语法:")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" compiled "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    compiled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ast")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("attrsList")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("attrsMap")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("…"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rawAttrsMap")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("…"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" …"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("errors")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"with(this){return _c('div',{attrs:{\"")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v("app"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"}},_l((list),function(i){return _c('div',[_v(_s(i.name))])}),0)}\"")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("staticRenderFns")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tips")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h2",{attrs:{id:"_30-谈一下你对-vuex-的个人理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-谈一下你对-vuex-的个人理解"}},[t._v("#")]),t._v(" 30. 谈一下你对 vuex 的个人理解？")]),t._v(" "),s("p",[t._v("Vuex 实现了一个单向数据流，会在全局有一个 state 存放数据流，当组件要更改 state 中的数据是，必须通过 mutations 进行，mutations 同时提供了订阅模式供外部插件调用获取 state 数据的更新，当用到异步操作的时候或批量操作需要走 actions，通过 actions 来调用 mutations 中的方法修改 state 中的数据，数据变化，会同时组件的视图更新。")]),t._v(" "),s("h2",{attrs:{id:"_31-vue-中-slot-是如何实现的-什么时候使用它"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-vue-中-slot-是如何实现的-什么时候使用它"}},[t._v("#")]),t._v(" 31. vue 中 slot 是如何实现的？什么时候使用它？")]),t._v(" "),s("p",[t._v("vue 中 slot 经常适用于开发独立组件的时候，用于扩展自定义标签，后期渲染的时候使用用户自定义的标签将 slot 替换，slot 只是组件内部的占位符。\n插槽分为：普通插槽、具名插槽(name)、作用域插槽(scope-scope)")]),t._v(" "),s("h2",{attrs:{id:"_32-如何优化单页面首屏加载白屏体验效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-如何优化单页面首屏加载白屏体验效果"}},[t._v("#")]),t._v(" 32. 如何优化单页面首屏加载白屏体验效果？")]),t._v(" "),s("ol",[s("li",[t._v('使用前端前端"骨架屏"，通过占位来实现')]),t._v(" "),s("li",[t._v("首屏采用服务端渲染，例如：vue 的 ssr 服务端渲染，后端骨架屏的好处是利于 seo 优化")]),t._v(" "),s("li",[t._v("路由懒加载")])]),t._v(" "),s("h2",{attrs:{id:"_33-vue3-0-在响应式方面对-vue2-0-的主要优化点在哪里"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-vue3-0-在响应式方面对-vue2-0-的主要优化点在哪里"}},[t._v("#")]),t._v(" 33. vue3.0 在响应式方面对 vue2.0 的主要优化点在哪里？")]),t._v(" "),s("h3",{attrs:{id:"优化点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化点"}},[t._v("#")]),t._v(" 优化点：")]),t._v(" "),s("p",[t._v("Vue2.0 核心主要基于 Object.defineProperty 来实现")]),t._v(" "),s("h2",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点：")]),t._v(" "),s("ol",[s("li",[t._v("递归观测数据，性能消耗")]),t._v(" "),s("li",[t._v("数组索引和 length 不支持")]),t._v(" "),s("li",[t._v("重新定义的属性无法观测")])]),t._v(" "),s("ul",[s("li",[t._v("Vue3.0 主要针对 Vue2.0 中三个方面做了优化，采用 proxy 来实现数据的观测，并没有一开始就递归观测，数组通过索引修改值，可以实现视图的刷新，从新定义的属性本身就会被观测。")])]),t._v(" "),s("h2",{attrs:{id:"_34-sync-修饰符的作用-用法以及实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-sync-修饰符的作用-用法以及实现原理"}},[t._v("#")]),t._v(" 34. .sync 修饰符的作用，用法以及实现原理")]),t._v(" "),s("p",[t._v("vue 中组件之间通信是单向数据流，在某些特殊场景，如果子组件想要修改父组件基于 props 传递的属性，可以使用 vue 提供的语法糖来实现，因为子组件不能直接修改 props 的属性；.sync 语法糖是通过事件触发原理，内部会编译成 update 方式，是 vue 规定的格式。")]),t._v(" "),s("h2",{attrs:{id:"_35-谈一谈你对-vue-性能优化的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-谈一谈你对-vue-性能优化的理解"}},[t._v("#")]),t._v(" 35. 谈一谈你对 Vue 性能优化的理解 ?")]),t._v(" "),s("ol",[s("li",[t._v("data 中的属性扁平化，层级不能太深，响应式数据通过递归方式实现")]),t._v(" "),s("li",[t._v("v-for 中尽量避免使用索引作为 key")]),t._v(" "),s("li",[t._v("v-if 和 v-for 避免一起使用，源码中 v-for 的优先级高于 v-if")]),t._v(" "),s("li",[t._v("路由的懒加载，减少页面的渲染开销")]),t._v(" "),s("li",[t._v("三方组件库的按需加载")]),t._v(" "),s("li",[t._v("vue 的 ssr 的服务端渲染")])]),t._v(" "),s("h2",{attrs:{id:"_36-vue2-0-与-vue3-0-的对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-vue2-0-与-vue3-0-的对比"}},[t._v("#")]),t._v(" 36. Vue2.0 与 Vue3.0 的对比？")]),t._v(" "),s("h3",{attrs:{id:"_1-通俗比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-通俗比较"}},[t._v("#")]),t._v(" 1. 通俗比较：")]),t._v(" "),s("ul",[s("li",[t._v("对 TypeScript 支持不友好（所有属性都放在 this 对象上，难以推到组件的数据类型）(vue2.0 是用 flow 写的)")]),t._v(" "),s("li",[t._v("大量的 API 挂载在 Vue 对象的原型上，难以实现 TreeShaking(树的摇晃)。")]),t._v(" "),s("li",[t._v("架构层面对跨平台 dom 渲染开发支持不友好（week）")]),t._v(" "),s("li",[t._v("CompositionAPI。受 ReactHook 启发")]),t._v(" "),s("li",[t._v("对虚拟 DOM 进行了重写、对模板的编译进行了优化操作...")])]),t._v(" "),s("h3",{attrs:{id:"_2-详细描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-详细描述"}},[t._v("#")]),t._v(" 2. 详细描述：")]),t._v(" "),s("ul",[s("li",[t._v("vue2.0 是用 flow 写的，对我们 typescript 支持不友好，vue3.0 采用 typescript 来写，对 ts 支持比较友好")]),t._v(" "),s("li",[t._v("vue2.0 源码用了很多的类，还有原型，对原型进行了扩展，把所有的属性扩展到了实例上，实例上有哪些方法和属性是无法使用 ts 来推断的，而且 ts 本身对类的推断不好；vue3.0 全部采用 compositionAPI，受 ReactHook 启发，Vue 写方法的时候，全部都是函数，不在是类的概念；")]),t._v(" "),s("li",[t._v("vue2.0 在打包的时候，还是比较慢的，有时候写所有方法，在打包的时候，都会被打包进去；用 vue2.0 时候我们通过传递一个对象（对象包含 data，watch，computed...）,只要这个对象被使用了，是无法监控到里面那些属性有没有用到，无法做 TreeShaking；vue3.0 采用的函数 api，如果这个方法没有被用到，就会被 TreeShaking 掉了，所以 vue3.0 的打包大小比我们 vue2.0 小很多")]),t._v(" "),s("li",[t._v("Vue3.0 的 Proxy 比 Vue2.0 的 defineProperty 性能高很多，defineProperty 的原理，给对象定义一个属性，重写 get 和 set 的方法；而 Proxy 并不改变原有对象，这个对象还是原有对象，只是给这个对象做了一层代理")]),t._v(" "),s("li",[t._v("Vue2.0 使用 defineProperty 不支持监控索引和长度，Proxy 可以解决这些问题")]),t._v(" "),s("li",[t._v("Vue3.0 并没有使用一上来就对对象进行深度递归，而是懒递归，当取值的时候做代理；并不是 vue2.0 把对象全部循环一遍，使用 defineProperty 增加属性")]),t._v(" "),s("li",[t._v("Vue3.0 架构层面做了调整和优化，就像 2.0 源码中把 week 代码也嵌入 vue2.0 中；vue3.0 拆分的很详细，比如可以 vue3.0 中方法导出，然后去重写这些方法（例如：nodeOpt 里面操作 dom 的方法）")]),t._v(" "),s("li",[t._v("对跨平台也做了优化")]),t._v(" "),s("li",[t._v("对虚拟 dom、模板编译做了很多优化。")])]),t._v(" "),s("h2",{attrs:{id:"_35-vue-中模版编译原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-vue-中模版编译原理"}},[t._v("#")]),t._v(" 35. Vue 中模版编译原理 ?")]),t._v(" "),s("h3",{attrs:{id:"核心-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心-2"}},[t._v("#")]),t._v(" 核心：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("将 template 转换成 render 函数")]),t._v(" "),s("ol",[s("li",[t._v("将"),s("code",[t._v("template")]),t._v("模板转换成 "),s("code",[t._v("ast")]),t._v(" 语法树 - parserHTML  转换方式："),s("code",[t._v("正则或有效状态计")])]),t._v(" "),s("li",[t._v("对静态语法做静态标记 - markUp  主要是为 diff 来做优化的，静态节点跳过 diff 操作")]),t._v(" "),s("li",[t._v("重新生成代码 - codeGen")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);