(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{789:function(s,t,a){"use strict";a.r(t);var e=a(13),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"js-中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-中"}},[s._v("#")]),s._v(" JS 中 !")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("!value")]),s._v(' 标识把右边值转换为布尔值（其它类型转换为布尔类型遵循的规律：只有[[0/NaN/null/undefined/""]] 五个值是 false，其余的都是 true），进行取反。')])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 两边类型不相等，都要转化为数字，进行比较 0 == 0 true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 运算符优先级 先算![] 再算比较")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ![] 转换为布尔类型值再取反（遵循规则：如")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 果是0/null/undefined/""这5个中值返回 false,其余都是true）')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最后两边 false == false  => true")]),s._v("\n")])])]),a("h2",{attrs:{id:"js-中-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-中-2"}},[s._v("#")]),s._v(" JS 中 !!")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("!!value")]),s._v(' 标识把右边值转换为布尔值（把其它类型转换为布尔类型遵循的规律：只有[[0/NaN/null/undefined/""]] 五个值是 false，其余的都是 true）进行取反，再取反。')])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 运算符优先级 先算![] 再算比较")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ![] 转换为布尔类型值再取反（遵循规则：如")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 果是0/null/undefined/""这5个中值返回 false,其余都是true）')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在取反 true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最后两边 true == false  => false")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);