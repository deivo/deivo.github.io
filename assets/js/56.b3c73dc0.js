(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{776:function(t,a,s){"use strict";s.r(a);var n=s(13),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"js-创建变量的底层机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-创建变量的底层机制"}},[t._v("#")]),t._v(" JS 创建变量的底层机制")]),t._v(" "),s("ul",[s("li",[t._v("Javascript 创建一个变量，底层要经过一下三个步骤")])]),t._v(" "),s("h3",{attrs:{id:"_1-创建值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建值"}},[t._v("#")]),t._v(" 1. 创建值")]),t._v(" "),s("ul",[s("li",[t._v("基本数据类型和引用数据类型创建的机制是不一样的\n"),s("ul",[s("li",[s("code",[t._v("基本数据类型")]),t._v("存储在栈内存中")]),t._v(" "),s("li",[s("code",[t._v("引用数据类型")]),t._v("是不行的")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-创建变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建变量"}},[t._v("#")]),t._v(" 2. 创建变量")]),t._v(" "),s("ul",[s("li",[t._v("将创建的变量存储到"),s("code",[t._v("变量对象")]),t._v("(VO)中")])]),t._v(" "),s("h3",{attrs:{id:"_3-复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-复制"}},[t._v("#")]),t._v(" 3. =复制")]),t._v(" "),s("ul",[s("li",[t._v("其实并不是赋值，只是建立变量和值之间的一个指针指向（也就是让值和变量做一个关联）")])]),t._v(" "),s("h3",{attrs:{id:"举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[t._v("#")]),t._v(" 举例")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deivo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Blog'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在给fn赋值的时候，是把自执行函数执行的返回结果赋值给fn属性")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught TypeError: Cannot read property 'name' of undefined")]),t._v("\n")])])]),s("ul",[s("li",[t._v("通过运行上面的代码，发现报错，原因：在给"),s("code",[t._v("fn")]),t._v("赋值的是，先要把自执行函数执行的返回结果与 fn 进行关联。")])]),t._v(" "),s("h3",{attrs:{id:"基本类型值-和-引用类型值的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本类型值-和-引用类型值的区别"}},[t._v("#")]),t._v(" 基本类型值 和 引用类型值的区别")]),t._v(" "),s("ul",[s("li",[s("ol",[s("li",[t._v("基本数据类型结构简单，直接存储在栈内存中。")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"2"}},[s("li",[t._v("引用数据类型结构比较复杂，不是直接存储在栈中，而是需要单独开辟一块内存，用来存储这些值，即为"),s("code",[t._v("堆内存")]),t._v("。")])]),t._v(" "),s("ul",[s("li",[t._v("开辟一块堆内存")]),t._v(" "),s("li",[t._v("把对象的键值对，依次存储到堆内存中")]),t._v(" "),s("li",[t._v("将堆内存的引用地址放置到栈内存中")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Deivo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Blog'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("img",{attrs:{src:t.$withBase("/assets/js234.png"),alt:"1"}}),t._v(" "),s("h3",{attrs:{id:"对象堆的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象堆的特点"}},[t._v("#")]),t._v(" 对象堆的特点：")]),t._v(" "),s("ol",[s("li",[t._v("把对象中的键值存储在对内存中")]),t._v(" "),s("li",[t._v("数组对象比普通对象多一个属性：length")])]),t._v(" "),s("h3",{attrs:{id:"函数堆的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数堆的特点"}},[t._v("#")]),t._v(" 函数堆的特点：")]),t._v(" "),s("ol",[s("li",[t._v('把函数体中的代码当做字符串存储到堆中 "代码字符串" => 创建函数不执行，函数没有什么作用')]),t._v(" "),s("li",[t._v("函数也是对象，他也有自己的键值对；例如：name:xxx, length: xxx, prototype: {}...")])])])}),[],!1,null,null,null);a.default=r.exports}}]);