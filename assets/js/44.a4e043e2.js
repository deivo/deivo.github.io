(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{764:function(t,s,a){"use strict";a.r(s);var e=a(13),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"ajax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" ajax")]),t._v(" "),a("h3",{attrs:{id:"ajax-的核心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax-的核心"}},[t._v("#")]),t._v(" ajax 的核心")]),t._v(" "),a("p",[t._v("ajax 的核心就是"),a("code",[t._v("XHLHttpRequest(XHR)")]),t._v("；"),a("code",[t._v("XHLHttpRequest")]),t._v("对象用于与服务器交互。通过 XHLHttpRequest 可以在不刷新页面的情况下请求特定 URL，获取数据。")]),t._v(" "),a("h4",{attrs:{id:"ajax-的四部曲"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax-的四部曲"}},[t._v("#")]),t._v(" ajax 的四部曲")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("1. 创建 XHR")]),t._v(" "),a("ul",[a("li",[t._v("不兼容 XMLHttpRequest 的浏览器(ie)使用 ActiveXObject 创建")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XHLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("strong",[t._v("2. 打开 URL(发送请求前的一些处理)")]),t._v(" "),a("ul",[a("li",[t._v("xhr.open(method, url, async, user-name )")]),t._v(" "),a("li",[a("code",[t._v("method")]),t._v(" "),a("ul",[a("li",[t._v("get 系列：从服务器获取")]),t._v(" "),a("li",[t._v("post 系列：向服务器发送信息")]),t._v(" "),a("li",[t._v("...")])])]),t._v(" "),a("li",[a("code",[t._v("async")]),t._v("是否为异步请求，默认是"),a("code",[t._v("true")]),t._v("，也就是异步，设置为"),a("code",[t._v("false")]),t._v("代表当前请求任务为同步（项目中基本上采用异步请求）")]),t._v(" "),a("li",[a("code",[t._v("user-name")]),t._v("、"),a("code",[t._v("user-pass")]),t._v("向服务器发送请求所携带的用户密码，只有在设置服务器设置了安全来宾账户的情况下需要（一般不用）")]),t._v(" "),a("li",[t._v("监听请求状态，在不同状态中做不同的事情")]),t._v(" "),a("li",[t._v("发送 ajax 请求（ajax 任务开始，直到响应主题信息返回【ajax 状态为 4】代表当前任务结束）")])])]),t._v(" "),a("li",[a("strong",[t._v("3. 监听状态和获取数据")]),t._v(" "),a("ul",[a("li",[t._v("通过监听不同的状态来实现数据的获取")])])]),t._v(" "),a("li",[a("strong",[t._v("4. 发送请求（"),a("code",[t._v("请求主体的信息基于send的时候发送给服务器")]),t._v("）")])])]),t._v(" "),a("h4",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("xhr.response")]),t._v(" 返回响应的正文。返回的类型为 ArrayBuffer 、 Blob 、 Document 、 JavaScript Object 或 DOMString 中的一个。 这取决于 responseType 属性。")]),t._v(" "),a("li",[a("code",[t._v("xhr.responseText")]),t._v(" 服务端响应的数据")]),t._v(" "),a("li",[a("code",[t._v("xhr.responseType")]),t._v(" 定义响应类型值")]),t._v(" "),a("li",[a("code",[t._v("xhr.status")]),t._v(" 响应的HTTP状态")]),t._v(" "),a("li",[a("code",[t._v("xhr.statusText")]),t._v(" HTTP状态的说明")]),t._v(" "),a("li",[a("code",[t._v("xhr.timeout")]),t._v(" 请求的超时事件")]),t._v(" "),a("li",[a("code",[t._v("xhr.withCredentials")]),t._v(" 一个"),a("code",[t._v("布尔值")]),t._v("，用来指定跨域 Access-Control 请求是否应带有授权信息，如 cookie 或授权 header 头")]),t._v(" "),a("li",[a("code",[t._v("xhr.upload")]),t._v(" 属性返回一个 XMLHttpRequestUpload 对象，用来表示上传的进度。")])]),t._v(" "),a("h4",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("h3",{attrs:{id:"http-请求方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-请求方法"}},[t._v("#")]),t._v(" HTTP 请求方法")]),t._v(" "),a("h4",{attrs:{id:"get-系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-系列"}},[t._v("#")]),t._v(" GET 系列")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("特点：")]),t._v(" 一般认为是服务器获取信息（当然也可以把客户端的信息传递给服务器），"),a("code",[t._v("比重：给的少，拿的多")])]),t._v(" "),a("li",[a("strong",[t._v("分类：")]),t._v(" "),a("code",[t._v("GET")]),t._v("、"),a("code",[t._v("DELETE")]),t._v("、"),a("code",[t._v("HEAD")]),t._v("、"),a("code",[t._v("OPTIONS")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("get")])]),t._v(" "),a("li",[a("code",[t._v("head：")]),t._v(" 只获取响应头的信息即可，响应主体信息不接受（服务器不需要返回）")]),t._v(" "),a("li",[a("code",[t._v("delete:")]),t._v(" 一般应用与想删除服务器上的一些文件或者一些大量信息")]),t._v(" "),a("li",[a("code",[t._v("options：")]),t._v(" 试探性请求，常用于 CROSS 跨域资源共享的时候，每一个正常的请求发送前，我们默认先发一个 options 请求，这个请求用来校验客户端和服务器是否正常链接即可")])])]),t._v(" "),a("li",[a("strong",[t._v("基于 get 向服务器发送请求，传递给服务器的方式：")]),t._v(" "),a("ul",[a("li",[t._v("基于请求头传递给服务器")]),t._v(" "),a("li",[t._v("请求 url 地址后面的问号传参（主要方式）")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./data.json?id=2&lx=0'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"post-系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post-系列"}},[t._v("#")]),t._v(" POST 系列")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("特点：")]),t._v(" 一般认为是给服务器推送信息（当然服务器也可以给客户端返回信息），"),a("code",[t._v("比重：给的多，拿的少")])]),t._v(" "),a("li",[a("strong",[t._v("分类：")]),t._v(" "),a("code",[t._v("post")]),t._v("、"),a("code",[t._v("put")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("post")])]),t._v(" "),a("li",[a("code",[t._v("put：")]),t._v(" 和 delete 对应的，一般用于给服务器传递文件或者大数据（例如文本编辑器编辑的内容）")])])]),t._v(" "),a("li",[a("strong",[t._v("基于 post 向服务器发送请求，传递服务器的方式：")]),t._v(" "),a("ul",[a("li",[t._v("基于请求头传递给服务器")])]),t._v(" "),a("ul",[a("li",[t._v("基于请求主体，把信息传递给服务器（主要方式）")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'post'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./data.json'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"get-和-post-系列的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post-系列的区别"}},[t._v("#")]),t._v(" GET 和 POST 系列的区别:")]),t._v(" "),a("p",[t._v("官方文档没有明确规定 GET 和 POST 的区别，但是大家约定俗称的按照以下的方式：")]),t._v(" "),a("ul",[a("li",[t._v("GET 传递给服务器的信息一般基于"),a("code",[t._v("URL地址问号传参")]),t._v("实现")]),t._v(" "),a("li",[t._v("POST 传递给服务器的信息一般基于"),a("code",[t._v("请求主体")]),t._v("实现")]),t._v(" "),a("li",[t._v("客户端还可以基于设置请求头把一些简要的信息传递给服务器（例如"),a("code",[t._v("cookie")]),t._v("、"),a("code",[t._v("token")]),t._v("...）")]),t._v(" "),a("li",[t._v("GET 传递给服务器的信息要远远小于 POST\n"),a("ul",[a("li",[a("code",[t._v("原因：")]),t._v(" URL 在不同浏览器中有长度的限制 (IE: 2kb（2*1024B）)，超出浏览器限制的部分，内容会被自动裁切掉；POST 理论上没有长度限制（请求主体设置过大小的限制）,但是真实项目中为了保证数据传输的高效性，我们都会手动做限制；")])])]),t._v(" "),a("li",[t._v("安全问题：POST 相对 GET 来讲安全好一些\n"),a("ul",[a("li",[a("code",[t._v("原因：")]),t._v(" 项目中涉及安全信息的传输都要用 POST（例如：登录）；GET 基于 URL 传输数据很容被 URL 劫持掉，这样不安全；POST 相对安全，但也不是绝对安全，所以对于重要的传输也需要进行手动加密处理（MD5 加密等）；")])])]),t._v(" "),a("li",[t._v("缓存问题：get 请求容易产生缓存\n"),a("ul",[a("li",[a("code",[t._v("原因：")]),t._v(" 浏览器在处理 GET 请求的时候，如果两次请求的地址 + 参数都一致，浏览器自己会设置数据缓存（当然这个缓存是我们不想要的）；所以，有时候解决这个问题就会给参数后面加随机数或一个时间戳等。")])])])]),t._v(" "),a("h3",{attrs:{id:"http-状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-状态码"}},[t._v("#")]),t._v(" HTTP 状态码")])])}),[],!1,null,null,null);s.default=v.exports}}]);